<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error" xml:space="preserve">
    <value>Erro</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Aceitar</value>
  </data>
  <data name="TurnOnInternet" xml:space="preserve">
    <value>Por favor, ligue suas configurações de Internet.</value>
  </data>
  <data name="NoInternet" xml:space="preserve">
    <value>Não há conexão com a internet</value>
  </data>
  <data name="titleProducts" xml:space="preserve">
    <value>Produtos</value>
  </data>
  <data name="titleAddProduct" xml:space="preserve">
    <value>Adicionar produto</value>
  </data>
  <data name="labelDescription" xml:space="preserve">
    <value>Descrição</value>
  </data>
  <data name="placeholderDescription" xml:space="preserve">
    <value>Digite a descrição do produto ...</value>
  </data>
  <data name="labelPrice" xml:space="preserve">
    <value>Preço!</value>
  </data>
  <data name="placeholderPrice" xml:space="preserve">
    <value>Insira Preço de Produto</value>
  </data>
  <data name="labelRemarks" xml:space="preserve">
    <value>Observações</value>
  </data>
  <data name="btnSave" xml:space="preserve">
    <value>Salve</value>
  </data>
  <data name="labelChangeImage" xml:space="preserve">
    <value>Toque na imagem para alterá-la</value>
  </data>
  <data name="errorDescription" xml:space="preserve">
    <value>Você deve digitar uma descrição!</value>
  </data>
  <data name="errorPrice" xml:space="preserve">
    <value>Você deve inserir um preço maior que zero</value>
  </data>
  <data name="msgImageSource" xml:space="preserve">
    <value>Onde vais tirar a foto?</value>
  </data>
  <data name="msgFromGallery" xml:space="preserve">
    <value>Da Galeria</value>
  </data>
  <data name="msgNewPicture" xml:space="preserve">
    <value>Tirar uma foto nova</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="btnEdit" xml:space="preserve">
    <value>Editar...</value>
  </data>
  <data name="btnDelete" xml:space="preserve">
    <value>Excluir</value>
  </data>
  <data name="msgDeleteConfirmation" xml:space="preserve">
    <value>Você tem certeza que quer deletar isto</value>
  </data>
  <data name="btnYes" xml:space="preserve">
    <value>Sim</value>
  </data>
  <data name="btnNo" xml:space="preserve">
    <value>Não</value>
  </data>
  <data name="msgConfirm" xml:space="preserve">
    <value>Confirmar</value>
  </data>
  <data name="titleEditProduct" xml:space="preserve">
    <value>Editar produto</value>
  </data>
  <data name="labelIsAvailable" xml:space="preserve">
    <value>está disponível?</value>
  </data>
  <data name="labelSearch" xml:space="preserve">
    <value>Pesquisar</value>
  </data>
  <data name="titleLogin" xml:space="preserve">
    <value>Logon:</value>
  </data>
  <data name="labelEMail" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="placeholderEmail" xml:space="preserve">
    <value>Por favor, digite seu endereço de e-mail…</value>
  </data>
  <data name="labelPassword" xml:space="preserve">
    <value>Senha</value>
  </data>
  <data name="placeholderPassword" xml:space="preserve">
    <value>Digite sua senha</value>
  </data>
  <data name="labelRememberme" xml:space="preserve">
    <value>Lembrar-me</value>
  </data>
  <data name="msgForgot" xml:space="preserve">
    <value>Esqueceu-se da palavra-passe?</value>
  </data>
  <data name="titleRegister" xml:space="preserve">
    <value>Novo Usuário</value>
  </data>
  <data name="msgEmailValidation" xml:space="preserve">
    <value>Informe seu email</value>
  </data>
  <data name="msgPasswordValidation" xml:space="preserve">
    <value>Precisa de inserir a sua palavra-passe.</value>
  </data>
  <data name="msgSomethingWrong" xml:space="preserve">
    <value>O email ou a senha não são válidos.</value>
  </data>
  <data name="titleMenu" xml:space="preserve">
    <value>Menu</value>
  </data>
  <data name="titleAbout" xml:space="preserve">
    <value>sobre();</value>
  </data>
  <data name="titleSetup" xml:space="preserve">
    <value>Configurar</value>
  </data>
  <data name="msgExit" xml:space="preserve">
    <value>Fechar Sessão</value>
  </data>
  <data name="msgNoProductsMessage" xml:space="preserve">
    <value>Não há informações de produtos disponíveis.</value>
  </data>
  <data name="labelFirstName" xml:space="preserve">
    <value>Primeiro nome</value>
  </data>
  <data name="labelLastName" xml:space="preserve">
    <value>Último nome</value>
  </data>
  <data name="labelPhone" xml:space="preserve">
    <value>Telefone</value>
  </data>
  <data name="labelAddress" xml:space="preserve">
    <value>Endereço</value>
  </data>
  <data name="placeholderFirstName" xml:space="preserve">
    <value>Digite seu primeiro nome...</value>
  </data>
  <data name="placeholderLastName" xml:space="preserve">
    <value>Digite seu sobrenome...</value>
  </data>
  <data name="placeholderPhone" xml:space="preserve">
    <value>Digite o seu número de telefone...</value>
  </data>
  <data name="placeholderAddress" xml:space="preserve">
    <value>Digite seu endereço...</value>
  </data>
  <data name="labelPasswordConfirm" xml:space="preserve">
    <value>Confirmar</value>
  </data>
  <data name="placeholderPasswordConfirm" xml:space="preserve">
    <value>Digite sua senha confirmar...</value>
  </data>
  <data name="msgFirstNameValidation" xml:space="preserve">
    <value>Você deve digitar um nome de punho.</value>
  </data>
  <data name="msgLastNameValidation" xml:space="preserve">
    <value>Você deve digitar um nome do passado.</value>
  </data>
  <data name="msgEMailValidationValid" xml:space="preserve">
    <value>Você deve digitar um email válido.</value>
  </data>
  <data name="msgPhoneValidation" xml:space="preserve">
    <value>Você deve digitar um número de telefone.</value>
  </data>
  <data name="msgPasswordValidationLong" xml:space="preserve">
    <value>Você deve digitar uma senha. Pelo menos 6 caracteres.</value>
  </data>
  <data name="msgPasswordConfirmValidation" xml:space="preserve">
    <value>Você deve digitar uma senha confirmar.</value>
  </data>
  <data name="msgPasswordsNoMatch" xml:space="preserve">
    <value>A senha e confirme a deve ser igual a.</value>
  </data>
  <data name="msgRegisterConfirmation" xml:space="preserve">
    <value>O usuário foi criado com êxito. Agora você pode entrar com o e-mail e a senha atribuída.</value>
  </data>
</root>